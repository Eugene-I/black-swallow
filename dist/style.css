/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
    font-family: sans-serif;
    /* 1 */
        -ms-text-size-adjust: 100%;
    /* 2 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
}

/**
 * Remove default margin.
 */

body {
    margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
    display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
    display: inline-block;
    /* 1 */
    vertical-align: baseline;
    /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
    display: none;
    height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
    display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
    background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
    outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
    border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
    font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
    font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
    background: #ff0;
    color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sup {
    top: -0.5em;
}

sub {
    bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
    border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
    overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
    margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
    box-sizing: content-box;
    height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
    overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
    font-family: monospace, monospace;
    font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
    color: inherit;
    /* 1 */
    font: inherit;
    /* 2 */
    margin: 0;
    /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
    overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
    text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
    -webkit-appearance: button;
    /* 2 */
    cursor: pointer;
    /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
    cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
    border: 0;
    padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
    line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
    box-sizing: border-box;
    /* 1 */
    padding: 0;
    /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
    -webkit-appearance: textfield;
    /* 1 */
    box-sizing: content-box;
    /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
    border: 0;
    /* 1 */
    padding: 0;
    /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
    overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
    font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
    border-collapse: collapse;
    border-spacing: 0;
}

td,
th {
    padding: 0;
}

@font-face {
    font-family: 'Atten New';
    src: url("fonts/AttenNewRegular.woff") format("woff");
    font-style: normal;
    font-weight: normal;
}

@font-face {
    font-family: 'Atten New';
    font-style: normal;
    font-weight: bold;
    src: url("fonts/AttenNewBold.woff") format("woff");
}

@font-face {
    font-family: 'Sneakers Script';
    font-style: normal;
    font-weight: 500;
    src: url("fonts/Sneakers-Script-Medium.ttf") format("truetype");
}

.accordion {
    margin: 0;
    padding: 0;
    list-style: none;
}

.ellipsis {
    white-space: nowrap;
    /* 1 */
    text-overflow: ellipsis;
    /* 2 */
    overflow: hidden;
}

html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

* {
    max-height: 1000000px;
}

body {
    background: #fff;
    color: #000;
    font: 12px/16px "Atten New", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
    min-width: 320px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

img {
    max-width: 100%;
    height: auto;
    vertical-align: top;
}

video,
iframe,
object,
embed {
    max-width: 100%;
    display: block;
}

#__bs_notify__ {
    display: none;
}

.gm-style img {
    max-width: none;
}

blockquote,
blockquote:before,
blockquote:after,
q,
q:before,
q:after {
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
    content: '';
}

.resize-active #header * {
    transition: none !important;
}

.font-size-subheading,
label {
    font-size: 10px;
    font-weight: bold;
    letter-spacing: 0.031em;
    line-height: 13px;
    text-transform: uppercase;
}

.font-size-navigation {
    font-size: 6px;
    letter-spacing: 0.02em;
    line-height: 8px;
    text-transform: uppercase;
}

.font-size-subcopy {
    font-size: 10px;
    line-height: 13px;
}

.font-size-price {
    font-size: 12px;
    line-height: 16px;
    text-transform: uppercase;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
.h {
    color: #000;
    font-family: "Sneakers Script", "Atten New", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
    font-weight: 500;
}

h1,
.h1 {
    font-size: 16px;
    line-height: 21px;
}

h2,
.h2 {
    font-size: 12px;
    line-height: 16px;
}

h3,
.h3 {
    font-size: 9px;
    line-height: 12px;
}

h4,
.h4 {
    font-size: 7px;
    line-height: 9px;
}

/*h5,
.h5 {
	font-size: $h1-font-size-mobile;
	line-height: $h1-line-height-mobile;
	@include media('>=tablet') {
		font-size: $h1-font-size-desktop;
		line-height: $h1-line-height-desktop;
	}
}

h6,
.h6 {
	font-size: $h1-font-size-mobile;
	line-height: $h1-line-height-mobile;
	@include media('>=tablet') {
		font-size: $h1-font-size-desktop;
		line-height: $h1-line-height-desktop;
	}
}*/

p {
    margin: 0 0 1em;
}

a:hover {
    text-decoration: none;
}

.btn {
    background: #e9ff09;
    border: 1px solid #000;
    color: #000;
    display: inline-block;
    vertical-align: top;
    font-size: 10px;
    font-weight: bold;
    line-height: 13px;
    padding: 8px 8px 9px;
    position: relative;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
}

.accordion {
    border-top: 1px solid #979797;
}

.accordion li {
    border-bottom: 1px solid #979797;
}

.accordion .opener {
    color: #000;
    display: block;
    padding: 10px 10px 11px;
    position: relative;
    text-decoration: none;
}

.accordion .opener:before {
    background: url("images/IndividualIconsPage_WhiteOutline_Plus copy.png");
    background-size: cover;
    content: '';
    height: 13px;
    position: absolute;
    right: 5px;
    top: 50%;
    transform: translateY(-50%);
    width: 13px;
}

.accordion .slide {
    display: none;
    padding: 10px 10px 11px;
}

form,
fieldset {
    margin: 0;
    padding: 0;
    border-style: none;
}

label {
    display: inline-block;
    vertical-align: top;
    margin: 0 0 10px;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
textarea {
    color: #000;
    -webkit-appearance: none;
    -webkit-border-radius: 0;
    border: 1px solid #000;
    box-shadow: none;
    box-sizing: border-box;
    display: block;
    background: #fff;
    font-size: 10px;
    height: 32px;
    line-height: 12px;
    margin: 0;
    outline: none;
    padding: 9px 11px;
    width: 100%;
}

input[type='text']::-webkit-input-placeholder,
input[type='tel']::-webkit-input-placeholder,
input[type='email']::-webkit-input-placeholder,
input[type='search']::-webkit-input-placeholder,
input[type='password']::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
    color: #c3c3c3;
}

input[type='text']::-moz-placeholder,
input[type='tel']::-moz-placeholder,
input[type='email']::-moz-placeholder,
input[type='search']::-moz-placeholder,
input[type='password']::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    color: #c3c3c3;
}

input[type='text']:-moz-placeholder,
input[type='tel']:-moz-placeholder,
input[type='email']:-moz-placeholder,
input[type='search']:-moz-placeholder,
input[type='password']:-moz-placeholder,
textarea:-moz-placeholder {
    color: #c3c3c3;
}

input[type='text']:-ms-input-placeholder,
input[type='tel']:-ms-input-placeholder,
input[type='email']:-ms-input-placeholder,
input[type='search']:-ms-input-placeholder,
input[type='password']:-ms-input-placeholder,
textarea:-ms-input-placeholder {
    color: #c3c3c3;
}

input[type='text'].placeholder,
input[type='tel'].placeholder,
input[type='email'].placeholder,
input[type='search'].placeholder,
input[type='password'].placeholder,
textarea.placeholder {
    color: #c3c3c3;
}

select {
    -webkit-border-radius: 0;
}

select .hideme {
    display: none;
}

textarea {
    resize: vertical;
    vertical-align: top;
    height: 150px;
    min-height: 120px;
}

button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
    -webkit-appearance: none;
    -webkit-border-radius: 0;
    cursor: pointer;
}

input[type="number"] {
    appearance: textfield;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
}

#wrapper {
    overflow: hidden;
}

.container {
    margin: 0 auto;
    padding: 0 15px;
}

@media (min-width: 768px) {
    body {
        font-size: 14px;
        line-height: 24px;
    }

    .font-size-subheading,
    label {
        font-size: 14px;
        letter-spacing: 0.043em;
        line-height: 19px;
    }

    .font-size-navigation {
        font-size: 10px;
        line-height: 13px;
    }

    .font-size-subcopy {
        font-size: 14px;
        line-height: 19px;
    }

    .font-size-price {
        font-size: 16px;
        line-height: 21px;
    }

    h1,
    .h1 {
        font-size: 24px;
        line-height: 32px;
    }

    h2,
    .h2 {
        font-size: 16px;
        line-height: 21px;
    }

    h3,
    .h3 {
        font-size: 14px;
        line-height: 19px;
    }

    h4,
    .h4 {
        font-size: 7px;
        line-height: 9px;
    }

    .btn {
        font-size: 14px;
        line-height: 19px;
        padding: 14px 15px 15px;
    }

    .accordion .opener:before {
        height: 16px;
        width: 16px;
    }

    input[type='text'],
    input[type='tel'],
    input[type='email'],
    input[type='search'],
    input[type='password'],
    textarea {
        font-size: 14px;
        height: 50px;
        line-height: 17px;
        padding: 15px 11px 16px;
    }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
